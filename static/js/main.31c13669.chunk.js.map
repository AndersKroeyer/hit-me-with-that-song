{"version":3,"sources":["Components/types.ts","Components/ControlPanel/ControlPanel.styles.ts","Data/SongBuildingUtil.ts","Data/VinVin2021.ts","Components/ControlPanel/ToggleWord.tsx/ToggleWord.style.ts","Components/ControlPanel/ToggleWord.tsx/ToggleWord.tsx","Components/ControlPanel/TeamPointControl/TeamPointControl.style.ts","Components/ControlPanel/TeamPointControl/TeamPointControl.tsx","config.ts","Utilities/Broadcaster.ts","Components/ControlPanel/PaperButton/PaperButton.style.ts","Components/ControlPanel/PaperButton/PaperButton.tsx","Components/ControlPanel/ControlPanel.tsx","Components/Dashboard/Dashboard.styles.ts","Components/Word/Word.styles.ts","Components/Colors.ts","Components/Word/Word.tsx","Components/Dashboard/Dashboard.tsx","Components/LandingPage/Landingpage.styles.ts","Components/LandingPage/LandingPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TriviaState","columnMargin","marginBottom","marginTop","styles","makeStyles","outerMostContainer","height","width","controlPanelContainer","display","justifyContent","marginLeft","marginRight","columnContainer","flexDirection","overflow","overflowX","columnScrollContainer","overflowY","paddingRight","boxSizing","wordColumnContainer","pickSong","padding","borderLeft","songTitle","fontWeight","fontSize","buildWords","words","arrayLength","randomIndices","attempts","length","index","Math","floor","random","includes","push","map","w","text","visible","stopWord","SongData","author","title","trivia","triviaAnswer","showTrivia","Hidden","url","playtime","toggleWordStyle","toggleWord","props","alignItems","backgroundColor","color","ToggleWord","idx","handleWordClick","classes","Paper","elevation","onClick","className","container","teamName","TeamPointControl","points","name","handlePointChange","Card","IconButton","sendStartMusic","music","console","log","bc","BroadcastChannel","Config","postMessage","close","sendIntroMusic","toggleButton","margin","PaperButton","children","style","TOGGLE_WORD_ACTION","SET_SONG_ACTION","TOGGLE_TRIVIA_ACTION","reducer","state","action","type","wordIndex","visibility","word","song","triviaState","Error","initialState","ControlPanel","useReducer","activeSong","dispatch","useState","team1Points","setTeam1Points","team2Points","setTeam2Points","isStopWord","sendGuessMusic","useEffect","sendSong","sendPoints","flatMap","x","uuidv4","forEach","delay","setTimeout","Object","keys","key","amount","cardFlipContainer","borderRight","borderTop","borderBottom","wordsContainer","triviaContainer","triviaText","pointsContainer","position","left","wordStyles","wordContainer","wordStyle","WordComponent","textLength","Dashboard","dataFromBroadCast","setDataFromBroadCast","teamPoints","setTeamPoints","playing","setPlaying","musicUrl","setMusicUrl","playTime","setPlaytime","playMusic","closeConnection","songUpdate","pointUpdate","onStartMusic","onmessage","data","subscribeToBroadcast","content","Question","flexGrow","textlength","parseFloat","isFlipped","flipDirection","Word","onPlay","landingPageContainer","Landingpage","to","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31c13669.chunk.js","sourcesContent":["export interface Word {\r\n  text: string;\r\n  visible: boolean;\r\n  stopWord: boolean;\r\n}\r\n\r\nexport interface Music {\r\n  url: string;\r\n  playtime: number;\r\n}\r\n\r\n// eslint-disable-next-line no-shadow\r\nexport enum TriviaState {\r\n  Hidden = 'Hide trivia',\r\n  Question = 'Show question',\r\n  Answer = 'Show Answer',\r\n}\r\n\r\nexport interface Song extends Music {\r\n  words: Word[];\r\n  author: string;\r\n  title: string;\r\n  trivia: string;\r\n  triviaAnswer: string;\r\n  showTrivia: TriviaState;\r\n}\r\n\r\nexport interface DashboardState {\r\n  words: Word[];\r\n  trivia: string;\r\n  triviaAnswer: string;\r\n  showTrivia: TriviaState;\r\n}\r\n\r\nexport interface TeamPoints {\r\n  team1Points: number;\r\n  team2Points: number;\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const columnMargin = {\r\n  marginBottom: '100px',\r\n  marginTop: '100px',\r\n};\r\n\r\nexport const styles = makeStyles({\r\n  outerMostContainer: {\r\n    height: '100vh',\r\n    width: '100%',\r\n  },\r\n  controlPanelContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    marginLeft: '100px',\r\n    marginRight: '100px',\r\n    height: '100%',\r\n  },\r\n  columnContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflow: 'hidden',\r\n    overflowX: 'hidden',\r\n    ...columnMargin,\r\n  },\r\n  columnScrollContainer: {\r\n    overflowY: 'scroll',\r\n    height: '100%',\r\n    width: '100%',\r\n    paddingRight: '17px',\r\n    boxSizing: 'content-box',\r\n    overflowX: 'hidden',\r\n  },\r\n  wordColumnContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    ...columnMargin,\r\n  },\r\n  pickSong: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginBottom: '10px',\r\n    padding: '15px',\r\n    borderLeft: '5px solid white',\r\n    marginLeft: '1px',\r\n    marginTop: '5px',\r\n  },\r\n  songTitle: {\r\n    fontWeight: 'bolder',\r\n    fontSize: '18px',\r\n  },\r\n});\r\n","import { Word } from '../Components/types';\r\n\r\nexport const rand = (arrayLength: number) =>\r\n  Math.floor(Math.random() * arrayLength);\r\n\r\nexport const buildWords = (words: string[]): Word[] => {\r\n  const randomIndices: number[] = [];\r\n  let attempts = 0;\r\n  while (randomIndices.length < 2) {\r\n    const index = rand(words.length);\r\n    if (!randomIndices.includes(index)) {\r\n      randomIndices.push(index);\r\n    }\r\n    attempts += 1;\r\n    if (attempts > 100) {\r\n      break;\r\n    }\r\n  }\r\n  return words.map((w, index) => ({\r\n    text: w,\r\n    visible: false,\r\n    stopWord: randomIndices.includes(index),\r\n  }));\r\n};\r\n","import { Song, TriviaState } from '../Components/types';\r\nimport { buildWords } from './SongBuildingUtil';\r\n\r\nconst SongData: Song[] = [\r\n  {\r\n    author: 'Britney Spears',\r\n    title: 'Toxic',\r\n    words: buildWords([\"don't\", 'you', 'know', 'that', \"you're\", 'toxic']),\r\n    trivia: 'I hvilket år klippede Britney Spears sit hår af?',\r\n    triviaAnswer: '2007',\r\n    showTrivia: TriviaState.Hidden,\r\n    url: 'https://www.youtube.com/watch?v=LOZuxwVk7TU&t=2m01s',\r\n    playtime: 12,\r\n  },\r\n  {\r\n    author: 'Birthe Kjær',\r\n    title: 'Sommer og Sol',\r\n    words: buildWords(['en', 'himmel', 'så', 'blå', 'som', 'viol']),\r\n    trivia: 'Hvilket mellemnavn blev Birthe Kjær født med?',\r\n    triviaAnswer: 'Glady',\r\n    showTrivia: TriviaState.Hidden,\r\n    url: 'https://www.youtube.com/watch?v=RDGNMXd21SY&t=0m9s',\r\n    playtime: 14,\r\n  },\r\n  {\r\n    author: 'Eminem',\r\n    title: 'Lose Yourself',\r\n    words: buildWords(['do', 'not', 'miss', 'you', 'chance', 'to', 'blow']),\r\n    trivia: 'Hvem sagsøgte Eminem over sangen \"My Name Is\"?',\r\n    triviaAnswer: \"Eminem's mor\",\r\n    showTrivia: TriviaState.Hidden,\r\n    url: 'https://www.youtube.com/watch?v=_Yhyp-_hX2s&t=1m38s',\r\n    playtime: 13,\r\n  },\r\n  {\r\n    author: 'Queen',\r\n    title: 'Bohemian Rhapsody',\r\n    words: buildWords(['wish', \"I'd\", 'never', 'been', 'born', 'at', 'all']),\r\n    trivia: 'Hvad hedder de 4 medlemmer i Queen?',\r\n    triviaAnswer:\r\n      'Freddie Mercury, Brian Harold May, Roger Taylor, og John Deacon',\r\n    showTrivia: TriviaState.Hidden,\r\n    url: 'https://www.youtube.com/watch?v=fJ9rUzIMcZQ&t=2m28s',\r\n    playtime: 13,\r\n  },\r\n  {\r\n    author: 'Michael Jackson',\r\n    title: 'Smooth Criminal',\r\n    words: buildWords(['tell', 'us', 'that ', \"you're\", 'okay']),\r\n    trivia: 'Hvor mange søskende havde Michael Jackson?',\r\n    triviaAnswer: '8',\r\n    showTrivia: TriviaState.Hidden,\r\n    url: 'https://www.youtube.com/watch?v=h_D3VFfhvs4&t=1m58s',\r\n    playtime: 17,\r\n  },\r\n  {\r\n    author: 'Nelly',\r\n    title: 'Hot in here',\r\n    words: buildWords(['take', 'off', 'all', 'your', 'clothes']),\r\n    trivia: 'Hvad er Nelly rigtige navn?',\r\n    triviaAnswer: 'Cornell Iral Haynes, Jr.',\r\n    showTrivia: TriviaState.Hidden,\r\n    url: 'https://www.youtube.com/watch?v=GeZZr_p6vB8&t=2m00s',\r\n    playtime: 18,\r\n  },\r\n  {\r\n    author: 'Nirvana',\r\n    title: 'Smells like teen spirit',\r\n    words: buildWords(['Here', 'we', 'are ', 'now', 'entertain', 'us']),\r\n    trivia: 'Hvornår døde Kurt Cobain?',\r\n    triviaAnswer: '8 April, 1994',\r\n    showTrivia: TriviaState.Hidden,\r\n    url: 'https://www.youtube.com/watch?v=hTWKbfoikeg&t=0m58s',\r\n    playtime: 18,\r\n  },\r\n\r\n  {\r\n    author: 'Notorious B.I.G',\r\n    title: 'Juicy',\r\n    words: buildWords([\r\n      'and',\r\n      'if',\r\n      'you',\r\n      \"don't\",\r\n      'know',\r\n      'now',\r\n      'you',\r\n      'know',\r\n    ]),\r\n    trivia: 'Hvilke kendte musikere gik Biggie i High School med?',\r\n    triviaAnswer: 'Jay Z, Busta Rhymes og DMX',\r\n    showTrivia: TriviaState.Hidden,\r\n    url: 'https://www.youtube.com/watch?v=_JZom_gVfuwt=2m14s',\r\n    playtime: 12,\r\n  },\r\n  {\r\n    author: 'Bon Jovi',\r\n    title: 'Living on a prayer',\r\n    words: buildWords(['Take', 'my', 'hand', \"we'll\", 'make', 'it']),\r\n    trivia: \"Hvad hedder Bon Jovi' gennembrudsalbum fra 1986?\",\r\n    triviaAnswer: 'Slippery When Wet',\r\n    showTrivia: TriviaState.Hidden,\r\n    url: 'https://www.youtube.com/watch?v=lDK9QqIzhwk&t=1m32s',\r\n    playtime: 16,\r\n  },\r\n  {\r\n    author: 'Nik & Jay',\r\n    title: 'En dag tilbage',\r\n    words: buildWords(['lyst', 'til', 'at', 'leve', 'videre', 'i', 'hende']),\r\n    trivia: 'Hvilken grøntsag er Nik allergisk overfor',\r\n    triviaAnswer: 'Tomat',\r\n    showTrivia: TriviaState.Hidden,\r\n    url: 'https://www.youtube.com/watch?v=_JgbyISzmjQ&t=1m25s',\r\n    playtime: 21,\r\n  },\r\n  {\r\n    author: 'Lil Nas X',\r\n    title: 'Old town road',\r\n    words: buildWords(['you', \"can't\", 'tell', 'me', 'nothing']),\r\n    trivia: 'Hvad er Lil Nas X rigtige navn?',\r\n    triviaAnswer: 'Montero Lamar Hill',\r\n    showTrivia: TriviaState.Hidden,\r\n    url: 'https://www.youtube.com/watch?v=r7qovpFAGrQ&t=40s',\r\n    playtime: 15,\r\n  },\r\n  {\r\n    author: 'Pharrel Williams',\r\n    title: 'Happy',\r\n    words: buildWords(['feel', 'like', 'happiness', 'is', 'the', 'truth']),\r\n    trivia:\r\n      'Pharrel Williams er halvdelen af hvilken hiphopmusikproduktionsselskab og sangskriver-duo?',\r\n    triviaAnswer: 'The Neptunes',\r\n    showTrivia: TriviaState.Hidden,\r\n    url: 'https://www.youtube.com/watch?v=cmCDqX3ngfA&t=0m30s',\r\n    playtime: 15,\r\n  },\r\n];\r\n\r\nexport default SongData;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nexport interface wordStyleProps {\r\n  visible: boolean;\r\n  stopWord: boolean;\r\n}\r\n\r\nexport const toggleWordStyle = makeStyles({\r\n  toggleWord: (props: wordStyleProps) => ({\r\n    width: '100px',\r\n    height: '100px',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    fontSize: '20px',\r\n    fontWeight: 'bolder',\r\n    marginBottom: '10px',\r\n    backgroundColor: props.visible ? 'lightgreen' : 'pink',\r\n    color: props.stopWord ? 'red' : 'black',\r\n  }),\r\n});\r\n","import { Paper } from '@material-ui/core';\r\nimport { Word } from '../../types';\r\nimport { toggleWordStyle } from './ToggleWord.style';\r\n\r\ninterface ToggleWordProps extends Word {\r\n  handleWordClick: () => void;\r\n  idx: number;\r\n}\r\n\r\nconst ToggleWord = ({\r\n  idx,\r\n  visible,\r\n  stopWord,\r\n  handleWordClick,\r\n}: ToggleWordProps) => {\r\n  const classes = toggleWordStyle({ visible, stopWord });\r\n\r\n  return (\r\n    <Paper\r\n      elevation={2}\r\n      onClick={handleWordClick}\r\n      className={classes.toggleWord}\r\n    >\r\n      <div>{idx + 1}</div>\r\n    </Paper>\r\n  );\r\n};\r\nexport default ToggleWord;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = makeStyles({\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginBottom: '50px',\r\n    alignItems: 'center',\r\n    padding: '10px',\r\n  },\r\n  teamName: {\r\n    fontSize: '22px',\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import { IconButton, Card } from '@material-ui/core';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport styles from './TeamPointControl.style';\r\n\r\ninterface TeamPointControlProps {\r\n  handlePointChange: (amount: number) => void;\r\n  points: number;\r\n  name: string;\r\n}\r\n\r\nconst TeamPointControl = ({\r\n  points,\r\n  name,\r\n  handlePointChange,\r\n}: TeamPointControlProps) => {\r\n  const classes = styles();\r\n  return (\r\n    <Card className={classes.container}>\r\n      <span className={classes.teamName}> {name} </span>\r\n\r\n      <div>\r\n        <IconButton aria-label=\"delete\" onClick={() => handlePointChange(-1)}>\r\n          <ArrowDownwardIcon fontSize=\"inherit\" />\r\n        </IconButton>\r\n        {points}\r\n        <IconButton aria-label=\"delete\" onClick={() => handlePointChange(1)}>\r\n          <ArrowUpwardIcon fontSize=\"inherit\" />\r\n        </IconButton>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\nexport default TeamPointControl;\r\n","export default {\r\n  broadcastChannelId: 'hitMedSangen',\r\n};\r\n","import { Music, Song, TeamPoints } from '../Components/types';\r\nimport Config from '../config';\r\n\r\nexport const sendSong = (song: Song) => {\r\n  const bc = new BroadcastChannel(Config.broadcastChannelId);\r\n  bc.postMessage({ song });\r\n  bc.close();\r\n};\r\n\r\nexport const sendPoints = (points: TeamPoints) => {\r\n  const bc = new BroadcastChannel(Config.broadcastChannelId);\r\n  bc.postMessage({ points });\r\n  bc.close();\r\n};\r\n\r\nexport const sendStartMusic = (music: Music) => {\r\n  console.log('start music', music);\r\n  const bc = new BroadcastChannel(Config.broadcastChannelId);\r\n  bc.postMessage({ music });\r\n  bc.close();\r\n};\r\n\r\ninterface sendGuessMusicProps {\r\n  isStopWord: boolean;\r\n}\r\nexport const sendGuessMusic = ({ isStopWord }: sendGuessMusicProps) => {\r\n  const soundToPlay = isStopWord\r\n    ? 'Sound/wrong_guess.mp3'\r\n    : 'Sound/correct_guess.mp3';\r\n  sendStartMusic({ url: soundToPlay, playtime: 2 });\r\n};\r\n\r\nexport const sendIntroMusic = () =>\r\n  sendStartMusic({ url: 'Sound/intro.mp3', playtime: 30 });\r\n\r\nexport const subscribeToBroadcast = (\r\n  songUpdate: (song: Song) => void,\r\n  pointUpdate: (points: TeamPoints) => void,\r\n  onStartMusic: (music: Music) => void,\r\n): (() => void) => {\r\n  const bc = new BroadcastChannel(Config.broadcastChannelId);\r\n  bc.onmessage = ({ data }) => {\r\n    console.log('got some broadcast data', data);\r\n    if (data.song) {\r\n      songUpdate(data.song);\r\n    }\r\n    if (data.points) {\r\n      pointUpdate(data.points);\r\n    }\r\n    if (data.music) {\r\n      onStartMusic(data.music);\r\n    }\r\n  };\r\n  return () => bc.close();\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = makeStyles({\r\n  toggleButton: {\r\n    width: '250px',\r\n    height: '100px',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    fontSize: '30px',\r\n    margin: '2px',\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import React from 'react';\r\nimport { Paper } from '@material-ui/core';\r\nimport styles from './PaperButton.style';\r\n\r\ninterface PaperButtonProps {\r\n  children: React.ReactNode;\r\n  onClick: () => void;\r\n}\r\nconst PaperButton = ({ children, onClick }: PaperButtonProps) => {\r\n  const classes = styles();\r\n\r\n  return (\r\n    <Paper\r\n      elevation={2}\r\n      className={classes.toggleButton}\r\n      onClick={onClick}\r\n      style={{ marginBottom: '25px' }}\r\n    >\r\n      {children}\r\n    </Paper>\r\n  );\r\n};\r\nexport default PaperButton;\r\n","import { Paper } from '@material-ui/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useReducer, useEffect, useState } from 'react';\r\nimport { Song, TriviaState, Word } from '../types';\r\nimport { styles } from './ControlPanel.styles';\r\nimport SongData from '../../Data/VinVin2021';\r\nimport ToggleWord from './ToggleWord.tsx/ToggleWord';\r\nimport TeamPointControl from './TeamPointControl/TeamPointControl';\r\nimport {\r\n  sendGuessMusic,\r\n  sendIntroMusic,\r\n  sendPoints,\r\n  sendSong,\r\n  sendStartMusic,\r\n} from '../../Utilities/Broadcaster';\r\nimport PaperButton from './PaperButton/PaperButton';\r\n\r\nconst TOGGLE_WORD_ACTION = 'toggleWordVisiblity';\r\ninterface toggleWordAction {\r\n  wordIndex: number;\r\n  type: typeof TOGGLE_WORD_ACTION;\r\n  visibility: boolean;\r\n}\r\nconst SET_SONG_ACTION = 'setSong';\r\ninterface setSongAction {\r\n  type: typeof SET_SONG_ACTION;\r\n  song: Song;\r\n}\r\nconst TOGGLE_TRIVIA_ACTION = 'toggleTrivia';\r\ninterface toggleTriviaAction {\r\n  type: typeof TOGGLE_TRIVIA_ACTION;\r\n  triviaState: TriviaState;\r\n}\r\n\r\ntype validActions = toggleWordAction | setSongAction | toggleTriviaAction;\r\n\r\nconst toggleWordVisiblity = (\r\n  words: Word[],\r\n  index: number,\r\n  visibility: boolean,\r\n) =>\r\n  words.map((word, idx) =>\r\n    index === idx ? { ...word, visible: visibility } : { ...word },\r\n  );\r\n\r\nfunction reducer(state: Song, action: validActions): Song {\r\n  switch (action.type) {\r\n    case TOGGLE_WORD_ACTION:\r\n      return {\r\n        ...state,\r\n        words: toggleWordVisiblity(\r\n          state.words,\r\n          action.wordIndex,\r\n          action.visibility,\r\n        ),\r\n      };\r\n    case SET_SONG_ACTION:\r\n      return action.song;\r\n    case TOGGLE_TRIVIA_ACTION:\r\n      return { ...state, showTrivia: action.triviaState };\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nconst initialState: Song = {\r\n  author: '',\r\n  showTrivia: TriviaState.Hidden,\r\n  title: '',\r\n  trivia: '',\r\n  triviaAnswer: '',\r\n  words: [],\r\n  url: 'https://www.youtube.com/watch?v=rUPJPXkiMMY&t=7', // intro song\r\n  playtime: 15,\r\n};\r\n\r\nfunction ControlPanel() {\r\n  const [activeSong, dispatch] = useReducer(reducer, initialState);\r\n  const [team1Points, setTeam1Points] = useState(0);\r\n  const [team2Points, setTeam2Points] = useState(0);\r\n\r\n  const handleSongClick = (index: number) =>\r\n    dispatch({ type: SET_SONG_ACTION, song: SongData[index] });\r\n\r\n  const handleWordClick = (\r\n    index: number,\r\n    visible: boolean,\r\n    stopWord: boolean,\r\n    music: boolean,\r\n  ) => {\r\n    if (visible && music) {\r\n      sendGuessMusic({ isStopWord: stopWord });\r\n    }\r\n    dispatch({\r\n      type: TOGGLE_WORD_ACTION,\r\n      wordIndex: index,\r\n      visibility: visible,\r\n    });\r\n  };\r\n\r\n  const handleTriviaClick = (state: TriviaState) =>\r\n    dispatch({ type: TOGGLE_TRIVIA_ACTION, triviaState: state });\r\n\r\n  const toggleRemainingWords = () => {\r\n    const notVisibleWords = activeSong.words.flatMap((word, index) =>\r\n      word.visible ? [] : [index],\r\n    );\r\n    notVisibleWords.forEach((wordIndex, delay) => {\r\n      setTimeout(() => {\r\n        handleWordClick(wordIndex, true, false, false);\r\n      }, 500 * delay);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    sendSong(activeSong);\r\n  }, [activeSong]);\r\n\r\n  useEffect(() => {\r\n    sendPoints({ team1Points, team2Points });\r\n  }, [team1Points, team2Points]);\r\n\r\n  const classes = styles();\r\n\r\n  return (\r\n    <div className={classes.outerMostContainer}>\r\n      <div className={classes.controlPanelContainer}>\r\n        {/* songpicker */}\r\n        <div className={classes.columnContainer}>\r\n          <div className={classes.columnScrollContainer}>\r\n            {SongData.map((song, idx) => (\r\n              <Paper\r\n                elevation={1}\r\n                className={classes.pickSong}\r\n                onClick={() => handleSongClick(idx)}\r\n                key={song.title}\r\n                style={{\r\n                  borderLeft:\r\n                    song.title === activeSong.title ? '5px solid green' : '',\r\n                }}\r\n              >\r\n                <span className={classes.songTitle}>{song.author}</span>\r\n                <span>{song.title}</span>\r\n                <i>{song.words.flatMap((x) => [x.text, ' '])}</i>\r\n              </Paper>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* toggle visibility  */}\r\n        <div className={classes.wordColumnContainer}>\r\n          {activeSong.words.map((word, idx) => (\r\n            <ToggleWord\r\n              idx={idx}\r\n              handleWordClick={() =>\r\n                handleWordClick(idx, !word.visible, word.stopWord, true)\r\n              }\r\n              stopWord={word.stopWord}\r\n              visible={word.visible}\r\n              text={word.text}\r\n              key={uuidv4()}\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n        <div className={classes.columnContainer}>\r\n          <PaperButton onClick={sendIntroMusic}>\r\n            <div>Play intro</div>\r\n          </PaperButton>\r\n          <PaperButton\r\n            onClick={() =>\r\n              sendStartMusic({\r\n                url: activeSong.url,\r\n                playtime: activeSong.playtime,\r\n              })\r\n            }\r\n          >\r\n            <div>Play song</div>\r\n          </PaperButton>\r\n          <PaperButton onClick={toggleRemainingWords}>\r\n            <div>Show all words</div>\r\n          </PaperButton>\r\n\r\n          {(Object.keys(TriviaState) as Array<keyof typeof TriviaState>).map(\r\n            (key) => (\r\n              <PaperButton\r\n                onClick={() => handleTriviaClick(TriviaState[key])}\r\n                key={uuidv4()}\r\n              >\r\n                <div\r\n                  style={{\r\n                    color:\r\n                      activeSong.showTrivia === TriviaState[key]\r\n                        ? 'green'\r\n                        : 'red',\r\n                  }}\r\n                >\r\n                  {TriviaState[key]}\r\n                </div>\r\n              </PaperButton>\r\n            ),\r\n          )}\r\n        </div>\r\n\r\n        <div className={classes.columnContainer}>\r\n          <TeamPointControl\r\n            name=\"Sasha Dupont\"\r\n            points={team1Points}\r\n            handlePointChange={(amount) => setTeam1Points(team1Points + amount)}\r\n          />\r\n          <TeamPointControl\r\n            name=\"Sigurd Barrett\"\r\n            points={team2Points}\r\n            handlePointChange={(amount) => setTeam2Points(team2Points + amount)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ControlPanel;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = makeStyles({\r\n  cardFlipContainer: {\r\n    borderLeft: 'solid 1px white',\r\n    borderRight: 'solid 1px white',\r\n    borderTop: 'solid 5px white',\r\n    borderBottom: 'solid 5px white',\r\n  },\r\n  wordsContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n    alignItems: 'center',\r\n    height: '100vh',\r\n    backgroundColor: '#373737',\r\n  },\r\n  triviaContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n    height: '100vh',\r\n    backgroundColor: '#373737',\r\n    color: 'white',\r\n    fontSize: '60px',\r\n  },\r\n  triviaText: {\r\n    marginLeft: '10%',\r\n    marginRight: '10%',\r\n  },\r\n  pointsContainer: {\r\n    position: 'absolute',\r\n    color: 'white',\r\n    fontSize: '26px',\r\n    left: '10px',\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import { makeStyles } from '@material-ui/core';\r\nimport { songDarkBlue, songRed } from '../Colors';\r\n\r\nexport interface wordStyleProps {\r\n  visible: boolean;\r\n  stopWord: boolean;\r\n  textLength: number;\r\n}\r\n\r\nexport const wordStyles = makeStyles({\r\n  wordContainer: (props: wordStyleProps) => ({\r\n    backgroundColor: props.stopWord ? songRed : songDarkBlue,\r\n    color: 'white',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '250px',\r\n    fontSize: props.visible ? '100px' : '150px',\r\n  }),\r\n  wordStyle: (props: wordStyleProps) => ({\r\n    marginBottom: props.visible ? '0' : '25px',\r\n  }),\r\n});\r\n","export const songDarkBlue = '#000fe7';\r\nexport const songRed = '#d34249';\r\n","import { Word } from '../types';\r\nimport { wordStyles } from './Word.styles';\r\n\r\nconst WordComponent = ({ text, visible, stopWord }: Word) => {\r\n  const classes = wordStyles({ stopWord, visible, textLength: text.length });\r\n\r\n  return (\r\n    <div className={classes.wordContainer} key={text}>\r\n      <span className={classes.wordStyle}>{visible ? text : '𝄞'}</span>\r\n    </div>\r\n  );\r\n};\r\nexport default WordComponent;\r\n","import { useEffect, useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ReactPlayer from 'react-player';\r\nimport ReactCardFlip from 'react-card-flip';\r\nimport styles from './Dashboard.styles';\r\nimport Word from '../Word/Word';\r\nimport { DashboardState, Music, TeamPoints, TriviaState } from '../types';\r\nimport { subscribeToBroadcast } from '../../Utilities/Broadcaster';\r\n\r\nconst initialState: DashboardState = {\r\n  words: [],\r\n  trivia: '',\r\n  triviaAnswer: '',\r\n  showTrivia: TriviaState.Hidden,\r\n};\r\n\r\nfunction Dashboard() {\r\n  const [dataFromBroadCast, setDataFromBroadCast] =\r\n    useState<DashboardState>(initialState);\r\n  const [teamPoints, setTeamPoints] = useState<TeamPoints>({\r\n    team1Points: 0,\r\n    team2Points: 0,\r\n  });\r\n  const [playing, setPlaying] = useState(false);\r\n  const [musicUrl, setMusicUrl] = useState('');\r\n  const [playTime, setPlaytime] = useState(0);\r\n\r\n  const playMusic = (music: Music) => {\r\n    setMusicUrl(music.url);\r\n    setPlaytime(music.playtime);\r\n    setPlaying(true);\r\n  };\r\n\r\n  const onMusicStart = () => {\r\n    setTimeout(() => {\r\n      setPlaying(false);\r\n    }, playTime * 1000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const closeConnection = subscribeToBroadcast(\r\n      setDataFromBroadCast,\r\n      setTeamPoints,\r\n      playMusic,\r\n    );\r\n    return () => {\r\n      closeConnection();\r\n    };\r\n  }, []);\r\n\r\n  const classes = styles();\r\n\r\n  const getGrowth = (textlength: number): number => {\r\n    if (textlength > 9) {\r\n      return 0.1;\r\n    }\r\n    const olo = 1 - parseFloat(`0.${textlength}`);\r\n    return olo;\r\n  };\r\n\r\n  const content =\r\n    dataFromBroadCast.showTrivia !== TriviaState.Hidden ? (\r\n      <div className={classes.triviaContainer}>\r\n        <span className={classes.triviaText}>\r\n          {dataFromBroadCast.showTrivia === TriviaState.Question\r\n            ? dataFromBroadCast.trivia\r\n            : dataFromBroadCast.triviaAnswer}\r\n        </span>\r\n      </div>\r\n    ) : (\r\n      <div className={classes.wordsContainer}>\r\n        {dataFromBroadCast.words.map((word, index) => (\r\n          <div\r\n            className={classes.cardFlipContainer}\r\n            style={{ flexGrow: getGrowth(word.text.length) }}\r\n          >\r\n            {/* <div style={{ color: 'white' }}>{index}</div> */}\r\n            <ReactCardFlip isFlipped={word.visible} flipDirection=\"horizontal\">\r\n              <Word\r\n                visible={false}\r\n                text={word.text}\r\n                stopWord={word.stopWord && word.visible}\r\n              />\r\n              <Word\r\n                visible\r\n                text={word.text}\r\n                stopWord={word.stopWord && word.visible}\r\n              />\r\n            </ReactCardFlip>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div style={{ overflowY: 'hidden' }}>\r\n      <div\r\n        className={classes.pointsContainer}\r\n        style={{ display: dataFromBroadCast.words.length ? 'block' : 'none' }}\r\n      >\r\n        <div>Sasha Dupont: {teamPoints.team1Points}</div>\r\n        <div>Sigurd Barrett: {teamPoints.team2Points}</div>\r\n      </div>\r\n      {content}\r\n      <ReactPlayer playing={playing} url={musicUrl} onPlay={onMusicStart} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = makeStyles({\r\n  landingPageContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n    height: '100vh',\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import { Link } from 'react-router-dom';\r\nimport styles from './Landingpage.styles';\r\n\r\nfunction Landingpage() {\r\n  const classes = styles();\r\n  return (\r\n    <div className={classes.landingPageContainer}>\r\n      <Link to=\"/control-panel\">Control panel</Link>\r\n      <Link to=\"/dashboard\">Dashboard</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Landingpage;\r\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport ControlPanel from './Components/ControlPanel/ControlPanel';\nimport Dashboard from './Components/Dashboard/Dashboard';\nimport Landingpage from './Components/LandingPage/LandingPage';\n\nfunction App() {\n  return (\n    <div>\n      <Router basename=\"/hit-me-with-that-song\">\n        <div>\n          <Switch>\n            <Route exact path=\"/control-panel\">\n              <ControlPanel />\n            </Route>\n            <Route exact path=\"/dashboard\">\n              <Dashboard />\n            </Route>\n            <Route path=\"/\">\n              <Landingpage />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}