{"version":3,"sources":["Components/ControlPanel/ControlPanel.styles.ts","Data/TDC2021.ts","Components/ControlPanel/ToggleWord.tsx/ToggleWord.style.ts","Components/ControlPanel/ToggleWord.tsx/ToggleWord.tsx","Components/ControlPanel/TeamPointControl/TeamPointControl.style.ts","Components/ControlPanel/TeamPointControl/TeamPointControl.tsx","config.ts","Components/ControlPanel/ControlPanel.tsx","Utilities/Broadcaster.ts","Components/Dashboard/Dashboard.styles.ts","Components/Word/Word.styles.ts","Components/Colors.ts","Components/Word/Word.tsx","Components/Dashboard/Dashboard.tsx","Components/LandingPage/Landingpage.styles.ts","Components/LandingPage/LandingPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["columnMargin","marginBottom","marginTop","styles","makeStyles","outerMostContainer","height","width","controlPanelContainer","display","justifyContent","marginLeft","marginRight","columnContainer","flexDirection","wordColumnContainer","pickSong","padding","songTitle","fontWeight","fontSize","toggleButton","alignItems","buildWords","words","console","log","arrayLength","randomIndices","length","index","Math","floor","random","includes","push","map","w","text","visible","stopWord","SongData","author","title","trivia","triviaAnswer","showTrivia","url","playtime","toggleWordStyle","toggleWord","props","backgroundColor","color","ToggleWord","idx","handleWordClick","classes","Paper","elevation","onClick","className","container","teamName","TeamPointControl","points","name","handlePointChange","Card","IconButton","TOGGLE_WORD_ACTION","SET_SONG_ACTION","TOGGLE_TRIVIA_ACTION","reducer","state","action","type","wordIndex","visibility","word","song","Error","initialState","ControlPanel","useReducer","activeSong","dispatch","useState","team1Points","setTeam1Points","team2Points","setTeam2Points","useEffect","bc","BroadcastChannel","Config","postMessage","close","sendSong","sendPoints","music","sendStartMusic","style","amount","wordsContainer","triviaContainer","triviaText","pointsContainer","position","left","wordStyles","wordContainer","borderLeft","borderRight","borderTop","borderBottom","wordStyle","WordComponent","Dashboard","dataFromBroadCast","setDataFromBroadCast","teamPoints","setTeamPoints","playing","setPlaying","musicUrl","setMusicUrl","playMusic","setTimeout","closeConnection","songUpdate","pointUpdate","onStartMusic","onmessage","data","subscribeToBroadcast","content","Word","overflowY","landingPageContainer","Landingpage","to","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd5be0cc.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const columnMargin = {\r\n  marginBottom: '100px',\r\n  marginTop: '100px',\r\n};\r\n\r\nexport const styles = makeStyles({\r\n  outerMostContainer: {\r\n    height: '100vh',\r\n    width: '100%',\r\n  },\r\n  controlPanelContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    marginLeft: '100px',\r\n    marginRight: '100px',\r\n    height: '100%',\r\n  },\r\n  columnContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    ...columnMargin,\r\n  },\r\n  wordColumnContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    ...columnMargin,\r\n  },\r\n  pickSong: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginBottom: '10px',\r\n    padding: '20px',\r\n    width: '100%',\r\n  },\r\n  songTitle: {\r\n    fontWeight: 'bolder',\r\n    fontSize: '18px',\r\n  },\r\n  toggleButton: {\r\n    width: '150px',\r\n    height: '100px',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    fontSize: '30px',\r\n  },\r\n});\r\n","import { Song, Word } from '../Components/types';\r\n\r\nconst rand = (arrayLength: number) => Math.floor(Math.random() * arrayLength);\r\n\r\nexport const buildWords = (words: string[]): Word[] => {\r\n  console.log('building random stopwords');\r\n  const randomIndices: number[] = [];\r\n  while (randomIndices.length < 2) {\r\n    const index = rand(words.length);\r\n    if (!randomIndices.includes(index)) {\r\n      randomIndices.push(index);\r\n    }\r\n  }\r\n  return words.map((w, index) => ({\r\n    text: w,\r\n    visible: false,\r\n    stopWord: randomIndices.includes(index),\r\n  }));\r\n};\r\n\r\nexport const SongData: Song[] = [\r\n  {\r\n    author: 'Rollo & King',\r\n    title: 'Der står et billede af dig på mit bord',\r\n    words: buildWords(['Der', 'står', 'et', 'billede', 'af', 'dig']),\r\n    trivia: 'Hvad var Rollo & Kings job før de lavede musik',\r\n    triviaAnswer: 'Skolelærer',\r\n    showTrivia: false,\r\n    url: 'https://www.youtube.com/watch?v=EnG6OpagWEc&t=40',\r\n    playtime: 12,\r\n  },\r\n  {\r\n    author: 'Shu-bi-dua',\r\n    title: 'Danmark',\r\n    words: buildWords(['Den', 'der', 'siger', 'andet', 'lyver']),\r\n    trivia:\r\n      'Hvor mange medlemmer har der været med i shubidua over årene: 3, 5, 9, 11 eller 16?',\r\n    triviaAnswer: '16',\r\n    showTrivia: false,\r\n    url: 'https://www.youtube.com/watch?v=xvq1__JFtrI&t=2m37s',\r\n    playtime: 14,\r\n  },\r\n];\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nexport interface wordStyleProps {\r\n  visible: boolean;\r\n  stopWord: boolean;\r\n}\r\n\r\nexport const toggleWordStyle = makeStyles({\r\n  toggleWord: (props: wordStyleProps) => ({\r\n    width: '100px',\r\n    height: '100px',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    fontSize: '20px',\r\n    fontWeight: 'bolder',\r\n    marginBottom: '10px',\r\n    backgroundColor: props.visible ? 'lightgreen' : 'pink',\r\n    color: props.stopWord ? 'red' : 'black',\r\n  }),\r\n});\r\n","import { Paper } from '@material-ui/core';\r\nimport { Word } from '../../types';\r\nimport { toggleWordStyle } from './ToggleWord.style';\r\n\r\ninterface ToggleWordProps extends Word {\r\n  handleWordClick: () => void;\r\n  idx: number;\r\n}\r\n\r\nconst ToggleWord = ({\r\n  idx,\r\n  visible,\r\n  stopWord,\r\n  handleWordClick,\r\n}: ToggleWordProps) => {\r\n  const classes = toggleWordStyle({ visible, stopWord: stopWord || false });\r\n\r\n  return (\r\n    <Paper\r\n      elevation={2}\r\n      onClick={handleWordClick}\r\n      className={classes.toggleWord}\r\n    >\r\n      <div>{idx + 1}</div>\r\n    </Paper>\r\n  );\r\n};\r\nexport default ToggleWord;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = makeStyles({\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginBottom: '50px',\r\n    alignItems: 'center',\r\n    padding: '10px',\r\n  },\r\n  teamName: {\r\n    fontSize: '22px',\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import { IconButton, Card } from '@material-ui/core';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport styles from './TeamPointControl.style';\r\n\r\ninterface TeamPointControlProps {\r\n  handlePointChange: (amount: number) => void;\r\n  points: number;\r\n  name: string;\r\n}\r\n\r\nconst TeamPointControl = ({\r\n  points,\r\n  name,\r\n  handlePointChange,\r\n}: TeamPointControlProps) => {\r\n  const classes = styles();\r\n  return (\r\n    <Card className={classes.container}>\r\n      <span className={classes.teamName}> {name} </span>\r\n\r\n      <div>\r\n        <IconButton aria-label=\"delete\" onClick={() => handlePointChange(-1)}>\r\n          <ArrowDownwardIcon fontSize=\"inherit\" />\r\n        </IconButton>\r\n        {points}\r\n        <IconButton aria-label=\"delete\" onClick={() => handlePointChange(1)}>\r\n          <ArrowUpwardIcon fontSize=\"inherit\" />\r\n        </IconButton>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\nexport default TeamPointControl;\r\n","export default {\r\n  broadcastChannelId: 'hitMedSangen',\r\n};\r\n","import { Paper } from '@material-ui/core';\r\nimport { useReducer, useEffect, useState } from 'react';\r\nimport { Song, Word } from '../types';\r\nimport { styles } from './ControlPanel.styles';\r\nimport { SongData } from '../../Data/TDC2021';\r\nimport ToggleWord from './ToggleWord.tsx/ToggleWord';\r\nimport TeamPointControl from './TeamPointControl/TeamPointControl';\r\nimport {\r\n  sendPoints,\r\n  sendSong,\r\n  sendStartMusic,\r\n} from '../../Utilities/Broadcaster';\r\n\r\nconst TOGGLE_WORD_ACTION = 'toggleWordVisiblity';\r\ninterface toggleWordAction {\r\n  wordIndex: number;\r\n  type: typeof TOGGLE_WORD_ACTION;\r\n  visibility: boolean;\r\n}\r\nconst SET_SONG_ACTION = 'setSong';\r\ninterface setSongAction {\r\n  type: typeof SET_SONG_ACTION;\r\n  song: Song;\r\n}\r\nconst TOGGLE_TRIVIA_ACTION = 'toggleTrivia';\r\ninterface toggleTriviaAction {\r\n  type: typeof TOGGLE_TRIVIA_ACTION;\r\n  visibility: boolean;\r\n}\r\n\r\ntype validActions = toggleWordAction | setSongAction | toggleTriviaAction;\r\n\r\nconst toggleWordVisiblity = (\r\n  words: Word[],\r\n  index: number,\r\n  visibility: boolean,\r\n) =>\r\n  words.map((word, idx) =>\r\n    index === idx ? { ...word, visible: visibility } : { ...word },\r\n  );\r\n\r\nfunction reducer(state: Song, action: validActions): Song {\r\n  switch (action.type) {\r\n    case TOGGLE_WORD_ACTION:\r\n      return {\r\n        ...state,\r\n        words: toggleWordVisiblity(\r\n          state.words,\r\n          action.wordIndex,\r\n          action.visibility,\r\n        ),\r\n      };\r\n    case SET_SONG_ACTION:\r\n      return action.song;\r\n    case TOGGLE_TRIVIA_ACTION:\r\n      return { ...state, showTrivia: action.visibility };\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nconst initialState: Song = {\r\n  author: '',\r\n  showTrivia: false,\r\n  title: '',\r\n  trivia: '',\r\n  triviaAnswer: '',\r\n  words: [],\r\n  url: 'https://www.youtube.com/watch?v=rUPJPXkiMMY&t=7',\r\n  playtime: 15,\r\n};\r\n\r\nfunction ControlPanel() {\r\n  const [activeSong, dispatch] = useReducer(reducer, initialState);\r\n  const [team1Points, setTeam1Points] = useState(0);\r\n  const [team2Points, setTeam2Points] = useState(0);\r\n\r\n  const handleSongClick = (index: number) =>\r\n    dispatch({ type: SET_SONG_ACTION, song: SongData[index] });\r\n  const handleWordClick = (index: number, visible: boolean) =>\r\n    dispatch({\r\n      type: TOGGLE_WORD_ACTION,\r\n      wordIndex: index,\r\n      visibility: visible,\r\n    });\r\n  const handleTriviaClick = (visible: boolean) =>\r\n    dispatch({ type: TOGGLE_TRIVIA_ACTION, visibility: visible });\r\n\r\n  useEffect(() => {\r\n    sendSong(activeSong);\r\n  }, [activeSong]);\r\n\r\n  useEffect(() => {\r\n    sendPoints({ team1Points, team2Points });\r\n  }, [team1Points, team2Points]);\r\n\r\n  const classes = styles();\r\n\r\n  return (\r\n    <div className={classes.outerMostContainer}>\r\n      <div className={classes.controlPanelContainer}>\r\n        {/* songpicker */}\r\n        <div className={classes.columnContainer}>\r\n          {SongData.map((song, idx) => (\r\n            <Paper\r\n              elevation={1}\r\n              className={classes.pickSong}\r\n              onClick={() => handleSongClick(idx)}\r\n            >\r\n              <span className={classes.songTitle}>{song.author}</span>\r\n              <span>{song.title}</span>\r\n            </Paper>\r\n          ))}\r\n        </div>\r\n\r\n        {/* toggle visibility  */}\r\n        <div className={classes.wordColumnContainer}>\r\n          {activeSong.words.map((word, idx) => (\r\n            <ToggleWord\r\n              idx={idx}\r\n              handleWordClick={() => handleWordClick(idx, !word.visible)}\r\n              stopWord={word.stopWord}\r\n              visible={word.visible}\r\n              text={word.text}\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n        <div className={classes.columnContainer}>\r\n          <Paper\r\n            elevation={2}\r\n            className={classes.toggleButton}\r\n            onClick={() =>\r\n              sendStartMusic({\r\n                url: activeSong.url,\r\n                playtime: activeSong.playtime,\r\n              })\r\n            }\r\n            style={{ marginBottom: '20px' }}\r\n          >\r\n            <div>Play song</div>\r\n          </Paper>\r\n\r\n          <Paper\r\n            elevation={2}\r\n            className={classes.toggleButton}\r\n            onClick={() => handleTriviaClick(!activeSong.showTrivia)}\r\n          >\r\n            <div style={{ color: activeSong.showTrivia ? 'green' : 'red' }}>\r\n              Trivia\r\n            </div>\r\n          </Paper>\r\n        </div>\r\n\r\n        <div className={classes.columnContainer}>\r\n          <TeamPointControl\r\n            name=\"Sasha Dupont\"\r\n            points={team1Points}\r\n            handlePointChange={(amount) => setTeam1Points(team1Points + amount)}\r\n          />\r\n          <TeamPointControl\r\n            name=\"Sigurd Bertet\"\r\n            points={team2Points}\r\n            handlePointChange={(amount) => setTeam2Points(team2Points + amount)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ControlPanel;\r\n","import { Music, Song, TeamPoints } from '../Components/types';\r\nimport Config from '../config';\r\n\r\nexport const sendSong = (song: Song) => {\r\n  console.log('sending song', song);\r\n  const bc = new BroadcastChannel(Config.broadcastChannelId);\r\n  bc.postMessage({ song });\r\n  bc.close();\r\n};\r\n\r\nexport const sendPoints = (points: TeamPoints) => {\r\n  console.log('sending points', points);\r\n  const bc = new BroadcastChannel(Config.broadcastChannelId);\r\n  bc.postMessage({ points });\r\n  bc.close();\r\n};\r\n\r\nexport const sendStartMusic = (music: Music) => {\r\n  console.log('sending song', music);\r\n  const bc = new BroadcastChannel(Config.broadcastChannelId);\r\n  bc.postMessage({ music });\r\n  bc.close();\r\n};\r\n\r\nexport const subscribeToBroadcast = (\r\n  songUpdate: (song: Song) => void,\r\n  pointUpdate: (points: TeamPoints) => void,\r\n  onStartMusic: (music: Music) => void,\r\n): (() => void) => {\r\n  const bc = new BroadcastChannel(Config.broadcastChannelId);\r\n  bc.onmessage = ({ data }) => {\r\n    console.log('got some broadcast data', data);\r\n    if (data.song) {\r\n      songUpdate(data.song);\r\n    }\r\n    if (data.points) {\r\n      pointUpdate(data.points);\r\n    }\r\n    if (data.music) {\r\n      onStartMusic(data.music);\r\n    }\r\n  };\r\n  return () => bc.close();\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = makeStyles({\r\n  wordsContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n    alignItems: 'center',\r\n    height: '100vh',\r\n    backgroundColor: '#373737',\r\n  },\r\n  triviaContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n    height: '100vh',\r\n    backgroundColor: '#373737',\r\n    color: 'white',\r\n    fontSize: '60px',\r\n  },\r\n  triviaText: {\r\n    marginLeft: '10%',\r\n    marginRight: '10%',\r\n  },\r\n  pointsContainer: {\r\n    position: 'absolute',\r\n    color: 'white',\r\n    fontSize: '26px',\r\n    left: '10px',\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import { makeStyles } from '@material-ui/core';\r\nimport { songDarkBlue, songRed } from '../Colors';\r\n\r\nexport interface wordStyleProps {\r\n  visible: boolean;\r\n  stopWord: boolean;\r\n}\r\nexport const wordStyles = makeStyles({\r\n  wordContainer: (props: wordStyleProps) => ({\r\n    backgroundColor: props.stopWord ? songRed : songDarkBlue,\r\n    color: 'white',\r\n    'flex-grow': '1',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderLeft: 'solid 1px white',\r\n    borderRight: 'solid 1px white',\r\n    borderTop: 'solid 5px white',\r\n    borderBottom: 'solid 5px white',\r\n    height: '250px',\r\n    fontSize: props.visible ? '100px' : '150px',\r\n  }),\r\n  wordStyle: (props: wordStyleProps) => ({\r\n    marginBottom: props.visible ? '0' : '25px',\r\n  }),\r\n});\r\n","export const songDarkBlue = '#000fe7';\r\nexport const songRed = '#d34249';\r\n","import { Word } from '../types';\r\nimport { wordStyles } from './Word.styles';\r\n\r\nconst WordComponent = ({ text, visible, stopWord }: Word) => {\r\n  const classes = wordStyles({ stopWord: stopWord || false, visible });\r\n\r\n  return (\r\n    <div className={classes.wordContainer} key={text}>\r\n      <span className={classes.wordStyle}>{visible ? text : '𝄞'}</span>\r\n    </div>\r\n  );\r\n};\r\nexport default WordComponent;\r\n","import { useEffect, useState } from 'react';\r\nimport ReactPlayer from 'react-player/youtube';\r\nimport styles from './Dashboard.styles';\r\nimport Word from '../Word/Word';\r\nimport { DashboardState, Music, TeamPoints } from '../types';\r\nimport { subscribeToBroadcast } from '../../Utilities/Broadcaster';\r\n\r\nconst initialState: DashboardState = {\r\n  words: [],\r\n  trivia: '',\r\n  showTrivia: false,\r\n};\r\n\r\nfunction Dashboard() {\r\n  const [dataFromBroadCast, setDataFromBroadCast] =\r\n    useState<DashboardState>(initialState);\r\n  const [teamPoints, setTeamPoints] = useState<TeamPoints>({\r\n    team1Points: 0,\r\n    team2Points: 0,\r\n  });\r\n  const [playing, setPlaying] = useState(false);\r\n  const [musicUrl, setMusicUrl] = useState('');\r\n\r\n  const playMusic = (music: Music) => {\r\n    setPlaying(true);\r\n    setMusicUrl(music.url);\r\n    setTimeout(() => {\r\n      setPlaying(false);\r\n    }, music.playtime * 1000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const closeConnection = subscribeToBroadcast(\r\n      setDataFromBroadCast,\r\n      setTeamPoints,\r\n      playMusic,\r\n    );\r\n    return () => {\r\n      closeConnection();\r\n    };\r\n  }, []);\r\n\r\n  const classes = styles();\r\n\r\n  const content = dataFromBroadCast.showTrivia ? (\r\n    <div className={classes.triviaContainer}>\r\n      <span className={classes.triviaText}>{dataFromBroadCast.trivia}</span>\r\n    </div>\r\n  ) : (\r\n    <div className={classes.wordsContainer}>\r\n      {dataFromBroadCast.words.map((word) => (\r\n        <Word\r\n          visible={word.visible}\r\n          text={word.text}\r\n          stopWord={word.stopWord && word.visible}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div style={{ overflowY: 'hidden' }}>\r\n      <div className={classes.pointsContainer}>\r\n        <div>Sasha Dupont: {teamPoints.team1Points}</div>\r\n        <div>Sigurd Bertet: {teamPoints.team2Points}</div>\r\n      </div>\r\n      {content}\r\n      <ReactPlayer playing={playing} url={musicUrl} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = makeStyles({\r\n  landingPageContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n    height: '100vh',\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import { Link } from 'react-router-dom';\r\nimport styles from './Landingpage.styles';\r\n\r\nfunction Landingpage() {\r\n  const classes = styles();\r\n  return (\r\n    <div className={classes.landingPageContainer}>\r\n      <Link to=\"/control-panel\">Control panel</Link>\r\n      <Link to=\"/dashboard\">Dashboard</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Landingpage;\r\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport ControlPanel from './Components/ControlPanel/ControlPanel';\nimport Dashboard from './Components/Dashboard/Dashboard';\nimport Landingpage from './Components/LandingPage/LandingPage';\n\nfunction App() {\n  return (\n    <div>\n      <Router basename=\"/hit-me-with-that-song\">\n        <div>\n          <Switch>\n            <Route exact path=\"/control-panel\">\n              <ControlPanel />\n            </Route>\n            <Route exact path=\"/dashboard\">\n              <Dashboard />\n            </Route>\n            <Route path=\"/\">\n              <Landingpage />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}